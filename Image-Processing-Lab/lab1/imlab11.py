# -*- coding: utf-8 -*-
"""ImLab11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DV3NIKUdhk-J3OSo7xym5NNLh3PwIDBk
"""

from google.colab import drive
drive.mount('/content/drive')

import cv2
import matplotlib.pyplot as plt

path = '/content/drive/MyDrive/imageLab1/lena.png'
img = cv2.imread(path, cv2.IMREAD_COLOR)
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
plt.show()

print("Max intensity: ", img.max())
print("Min intensity: ", img.min())

print(img.shape)

img = cv2.imread(path, cv2.IMREAD_GRAYSCALE)
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))

for i in range(img.shape[0]):
  for j in range(img.shape[1]):
    if img[i,j]%2==0:
      img[i][j]=0
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
# plt.show()

import numpy as np

img = cv2.imread(path, cv2.IMREAD_GRAYSCALE)
img_H = img.shape[0]
img_W = img.shape[1]

kernel = np.array(([0,-1,0], [-1, 5, -1], [0,-1,0]), np.float32)
# kernel = np.transpose(kernel)
kernel_size  = len(kernel)
print(kernel_size)
extra = (kernel_size-1)//2
img = cv2.copyMakeBorder(img,extra,extra,extra,extra, cv2.BORDER_REPLICATE)

result = np.zeros((img_H, img_W), dtype='float32')
n = (kernel_size - 1)//2
for x in range(img_H):
  for y in range(img_W):
    sum = 0
    for j in range(kernel_size):
      for i in range(kernel_size):
        # print(kernel[i,j])
        # print(img[x-i-n, y-j-n])
        sum += kernel[i,j]*img[x-i-n, y-j-n]
        # print(sum)
    result[x, y] = sum
    # print(sum)

plt.imshow(cv2.cvtColor(result, cv2.COLOR_BGR2RGB))
plt.show()

